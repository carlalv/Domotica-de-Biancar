esphome:
  name: esp32-iot1
  friendly_name: ESP32_iot1

esp32:
  board: nodemcu-32s
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "your_key"

ota:
  password: "your_password"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Iot1 Fallback Hotspot"
    password: "your_password"

captive_portal:
#Sensor de temperatura y humedad del ambiente en que se encuentre
sensor:
  - platform: dht
    model: DHT11
    pin: GPIO16
    temperature:
     name: "Temperatura"
     id: "temp"
    humidity:
     name: "Humedad"
     id: "hum"
    update_interval: 5s

  - platform: ultrasonic
    trigger_pin: GPIO5
    echo_pin: GPIO23
    name: "Ultrasonic Sensor"
    id: "dist"
    update_interval: 1s
#Se trata de un relé que hara que se accione nuestro ventilador
switch:
    platform: gpio
    name: "RelÉ"
    pin: GPIO26
#Luz que más tarde se accionará mediante el uso de un botón binario
light:
    platform: binary
    name: "Luz"
    output: light_output

output:
    id: light_output
    platform: gpio
    pin: GPIO17

#Botón binario para activar, en este caso, la luz
binary_sensor:
    platform: gpio
    pin: GPIO18
    name: "botón_biancar"
    device_class: window
    
i2c:
  sda: GPIO21
  scl: GPIO22
#Pantalla lcd que mostrará el texto que deseamos, en este caso la temperatura y la humedad que nos indica el sensor.
display:
  platform: lcd_pcf8574
  dimensions: 16x2
  address: 0x27
  lambda: |-
    it.printf(2, 0, "%.1f", id(temp).state);
    it.printf(2, 1, "%.1f", id(hum).state);
    it.print(0, 0, "T=");
    it.print(0, 1, "H=");
